---
name: Pull request pre-check build & test

on:
  pull_request:
  push:
    branches: [main]

jobs:
  # pre-commit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"
  #     - uses: pre-commit/action@v3.0.0

  build-fedora-container-on-ubuntu:
    name: Build and push image
    runs-on: ubuntu-latest
    # needs: [pre-commit]
    env:
      IMAGE_REGISTRY_GITHUB: ghcr.io # /tiboris/ipa-tuura
      IMAGE_REGISTRY_QUAY: quay.io # /tiboris/ipa-tuura
    steps:
      - name: Log in to the GitHub Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Quay.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY_QUAY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - uses: actions/checkout@v3

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          tags: |
              ${{ env.IMAGE_REGISTRY_GITHUB }}:${{ steps.vars.outputs.sha_short }}
              ${{ ( github.ref == 'refs/heads/main' && format('{0}:latest', env.IMAGE_REGISTRY_GITHUB) ) || '' }}
              ${{ ( github.ref_type == 'tag' && format('{0}:{1}', env.IMAGE_REGISTRY_GITHUB, github.ref_name) ) || '' }}
              ${{ env.IMAGE_REGISTRY_QUAY }}:${{ steps.vars.outputs.sha_short }}
              ${{ ( github.ref == 'refs/heads/main' && format('{0}:latest', env.IMAGE_REGISTRY_QUAY) ) || '' }}
              ${{ ( github.ref_type == 'tag' && format('{0}:{1}', env.IMAGE_REGISTRY_QUAY, github.ref_name) ) || '' }}
          containerfiles: |
            ./Dockerfile.test

      - name: Push to Repositories
        id: push-to-repo
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-repo.outputs.registry-paths }}"

  run-docker-compose-on-ubuntu:
    runs-on: ubuntu-latest
    needs: [build-fedora-container-on-ubuntu]
    env:
      REGISTRY: quay.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}
      IMAGE_TAG: ${{ github.event.number || github.ref_name  }}  # use PR number else ref_name -> branch name

    permissions:
      contents: read
      packages: read

    steps:
      - name: Print IMAGE_TAG to be used
        run: echo "${{ env.IMAGE_TAG }}"

      - name: Set lower case image name derived from repository name
        run: |
          echo "IMAGE_NAME=${IMAGE,,}" >> ${GITHUB_ENV}
        env:
          IMAGE: '${{ github.repository }}'

      # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry
      - name: Log into ghcr.io registry
        if: github.event_name == 'pull_request'
        run: |
          echo "REGISTRY=ghcr.io" >> ${GITHUB_ENV}
          export CR_PAT=${{ secrets.GHCR_TOKEN }} && echo $CR_PAT | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # https://github.com/docker/login-action
      - name: Log into quay.io registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USERNAME}}
          password: ${{ secrets.REGISTRY_TOKEN }}


      - name: Pull the image and try to run it
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker images
          docker-compose --help
